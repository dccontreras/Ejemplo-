load("C:/Users/Diana C Contreras/OneDrive - Universidad de Los Andes/Fundación Juanfe/Base_cruda_S3.dta")
library(haven)
Base_cruda_S3 <- read_dta("C:/Users/Diana C Contreras/OneDrive - Universidad de Los Andes/Fundación Juanfe/Base_cruda_S3.dta")
View(Base_cruda_S3)
demo()
demo(graphics.off())
demo(graphics)
2
x<-2
x<-2
y=3
x+y
x*y
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
precio <- read.csv("C:/Users/Diana C Contreras/Downloads/precio.csv")
View(precio)
precio <- read.csv("C:\Users\Diana C Contreras\Downloads\precio.csv")
#para no mostrar toda la base, se usa head y muestra el número de filas por ejemplo 20
#Si uno quiere ver alguna variable especifica solo se usa el signo pesos
head(precio$crim, 20)
head(precio[1,2])
head(precio[1,])
#o puedo llamar en los corchetes con el nombre de la variable
head(precio[, "crim""X"])
#o puedo llamar en los corchetes con el nombre de la variable
head(precio[, "crim"])
#también tengo la opción para las filas de abajo hacia arriba
tail(precio, 20)
summary(precio)
mean(precio$medv)
sum(precio$medv)
table(precio$chas)
prop.table(table(precio$chas))
#ifelse(condicion,consecuencia si se cumple, consecuencia si no se cumple)
precio$nueva_var=ifelse(precio$age>50,1,0)
#ifelse(condicion,consecuencia si se cumple, consecuencia si no se cumple)
precio$nueva_var=ifelse(precio$age>=50,1,0)
#ifelse(condicion,consecuencia si se cumple, consecuencia si no se cumple)
precio$nueva_var=ifelse(precio$age>=50chas=1 & ,1,0)
#ifelse(condicion,consecuencia si se cumple, consecuencia si no se cumple)
precio$nueva_var=ifelse(precio$age>=50chas==1 & ,1,0)
#ifelse(condicion,consecuencia si se cumple, consecuencia si no se cumple)
precio$nueva_var=ifelse(precio$age>=50 & chas==1 ,1,0)
#ifelse(condicion,consecuencia si se cumple, consecuencia si no se cumple)
precio$nueva_var=ifelse(precio$age>=50 & precio$chas==1 ,1,0)
precio$nueva_var=NULL
write.csv(precio,"base.csv")
setwd("~/")
save(precio, file="base.RData")
#gráficos
hist(precio$crim)
#gráficos
hist(precio$crim, main="titulo titulo", xlab="crim")
boxplot(precio$crim)
cor(precio)
cor(precio$crim, precio$medv)
lm(precio~crim+lstat, data=precio)
lm(medv~crim+lstat, data=precio)
reg1= lm(medv~crim+lstat, data=precio)
confit(reg1)
confint(reg1)
setwd("C:/Users/Diana C Contreras/OneDrive - Universidad de Los Andes/Sem. Minería de Datos/Clase 2")
dt <- read.csv("AB_NYC_2019.csv")
dt <- read.csv("AB_NYC_2019.csv")
dt <- read.csv("AB_NYC_2019.csv")
dt <- read.csv("AB_NYC_2019.csv")
# 1. Muestre el nombre de las columnas
names(dt)
# 2.Muestre las primeras 20 observaciones (utilice el comando head)
head(dt[20,])
# 2.Muestre las primeras 20 observaciones (utilice el comando head)
head(dt[])
# 2.Muestre las primeras 20 observaciones (utilice el comando head)
head(dt, n=20L)
# 4. Muestre los tipos de las variables. Son correctos?
typeof(dt)
# 3.Muestre las ultimos 10 hosts
tail(dt[,"host_name"],10)
# 4. Muestre los tipos de las variables. Son correctos?
str(dt)
# 5. Cambie el tipo de variable segÃºn corresponda.
dt$name<- as.character(dt$name)
ame<- as.character(dt$name)
dt$host_name<-as.character(dt$host_name)
dt$neighbourhood<-as.character(dt$neighbourhood)
dt$last_revie
dt$price,dt$minimum_nights, dt$number_of_reviews, dt$reviews_per_month, dt$calculated_host_listings_count, dt$availability_365)
summary(x)
t$price ,dt$minimum_nights, dt$number_of_reviews, dt$reviews_per_month, dt$calculated_host_listings_count, dt$availability_365)
summary(x)
# 6. Muestre las estadisticas descriptivas.Cuales variables numericas presentan observaciones vacias?
is.na(dt)
price
dt(c
summary(dt[(c("price")]))
c("
summary(dt[c("price")])
# 6. Muestre las estadisticas descriptivas.Cuales variables numericas presentan observaciones vacias?
summary(dt)
sapply(dt[, c("id", "")], summary)
sapply(dt[, c("id", "host_id")], summary)
# 7. Utilice na.omit  para eliminar las observaciones con valores perdidos
na.omit(dt$reviews_per_month)
# 7. Utilice na.omit  para eliminar las observaciones con valores perdidos
dt<-na.omit(dt$reviews_per_month)
sapply(dt[, c("id", "host_id")], summary)
dt <- read.csv("AB_NYC_2019.csv")
ames(dt)
# 2.Muestre las primeras 20 observaciones (utilice el comando head)
head(dt,20)
# 3.Muestre las ultimos 10 hosts
tail(dt[,"host_name"],10)
# 4. Muestre los tipos de las variables. Son correctos?
str(dt)
# 5. Cambie el tipo de variable segÃºn corresponda.
dt$name<- as.character(dt$name)
dt$host_name<-as.character(dt$host_name)
dt$neighbourhood<-as.character(dt$neighbourhood)
dt$last_review<-as.Date(dt$last_review)
# 6. Muestre la
sapply(dt[, c("price", "minimun_nights","number_of_reviews","reviews_per_month","availability_365")], summary)
# 7. Utilice na.omit  para eliminar las observaciones con valores perdidos
dt<-na.omit(dt$reviews_per_month)
# 7. Utilice na.omit  para eliminar las observaciones con valores perdidos
dt<-na.omit(dt$reviews_per_month)
dt <- read.csv("AB_NYC_2019.csv")
ames(dt)
# 2.Muestre las primeras 20 observaciones (utilice el comando head)
head(dt,20)
# 3.Muestre las ultimos 10 hosts
tail(dt[,"host_name"],10)
# 4. Muestre los tipos de las variables. Son correctos?
str(dt)
# 5. Cambie el tipo de variable segÃºn corresponda.
dt$name<- as.character(dt$name)
dt$host_name<-as.character(dt$host_name)
dt$neighbourhood<-as.character(dt$neighbourhood)
dt$last_review<-as.Date(dt$last_review)
# 6. Muestre las estadisticas descriptivas.Cuales variables numericas presentan observaciones vacias?
is.na(dt)
t(dt)
# 8. Cual es el condado mas popular en la base de datos?
mode(dt)
# 8. Cual es el condado mas popular en la base de datos?
mode(dt$neighbourhood_group)
max(dt$neighbourhood_group)
# 8. Cual es el condado mas popular en la base de datos?
sort(table(dt$neighbourhood_group),decreasing = TRUE)[1:3]
host_name
# 9. A que host corresponde el lugar mas costoso de la base de datos?
dt[which.max(dt$price),c("host_id","host_name ")]
# 9. A que host corresponde el lugar mas costoso de la base de datos?
dt[which.max(dt$price),c("host_id","host_name")]
# 10. Cuales son las caracteristicas del lugar mas barato?
dt[which.min(dt$price),c("neighbourhood","latitude","longitude", "room_type","minimun_nights","availability_365")]
# 10. Cuales son las caracteristicas del lugar mas barato?
dt[which.min(dt$price),c("neighbourhood","latitude","longitude","room_type","minimun_nights","availability_365")]
# 10. Cuales son las caracteristicas del lugar mas barato?
dt[which.min(dt$price),c("neighbourhood","latitude","longitude","room_type","minimun_nights","availability_365")]
# 10. Cuales son las caracteristicas del lugar mas barato?
dt[which.min(dt$price),c("neighbourhood","latitude","longitude","room_type","minimum_nights","availability_365")]
View(dt)
# 11. Construya una nueva variable llamada nueva que identifique con (1) aquellas observaciones
# que se encuentran en el barrio Harlem presentan un numero de reviews mayor a 0,
# tengan cuarto privado y permita quedarte minimo una noche.
nueva<-ifelse(ifelse(dt$neighbourhood=="Harlem",dt$number_of_reviews>0,0),1,0)
if{(dt$neighbourhood=="Harlem")&(dt$number_of_reviews>0)&(dt$room_type=="Private Room")$(dt$minimum_nights>=1)}
nueva<-1
f dt$neighbourhood=="Harlem" && dt$number_of_reviews>0 && dt$room_type=="Private Room" && dt$minimum_nights>=1{
nueva<-1
}
if dt$neighbourhood=="Harlem" && dt$number_of_reviews>0 && dt$room_type=="Private Room" && dt$minimum_nights>=1{
nueva<-1
}
if (dt$neighbourhood=="Harlem" && dt$number_of_reviews>0 && dt$room_type=="Private Room" && dt$minimum_nights>=1){nueva<-1}else 0
if (dt$neighbourhood=="Harlem" && dt$number_of_reviews>0 && dt$room_type=="Private Room" && dt$minimum_nights>=1){dt$nueva<-1}else dt$nueva<-0
